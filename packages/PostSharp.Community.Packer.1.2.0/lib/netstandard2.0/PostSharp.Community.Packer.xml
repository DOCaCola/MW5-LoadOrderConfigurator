<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PostSharp.Community.Packer</name>
    </assembly>
    <members>
        <member name="T:PostSharp.Community.Packer.PackerAttribute">
            <summary>
            Add <c>[assembly: Packer]</c> anywhere in your source code to ensure that all references are packed into
            your main output assembly.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.OptOut">
            <summary>
            Returns true if all assemblies except excluded assemblies should be embedded. If this is false,
            then only assemblies specifically included should be embedded.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.IncludeDebugSymbols">
            <summary>
            If true, then .pdb files are also embedded. Default true.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.DisableCompression">
            <summary>
            If true, then the assemblies embedded into the main assembly won't be compressed. Default false ("do compress").
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.DisableCleanup">
            <summary>
            This option doesn't work. If it did, it would control whether
            embedded assemblies are placed in the output folder anyway, even
            though they aren't necessary anymore.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.LoadAtModuleInit">
            <summary>
            If true, then Packer will bootstrap itself in your assembly's module initializer and you don't need to
            call <see cref="M:PostSharp.Community.Packer.PackerUtility.Initialize"/>. Default true ("load automatically").
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.CreateTemporaryAssemblies">
            <summary>
            This will copy embedded files to disk before loading them into
            memory. This is helpful for some scenarios that expected an
            assembly to be loaded from a physical file. For example, if some
            code checks the assembly's assembly location. Default false.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.IgnoreSatelliteAssemblies">
            <summary>
            This add-in will by default use assemblies with a name
            like 'resources.dll' as a satellite resource and prepend
            the output path. This flag disables that behavior.
            Be advised, that DLL project assembly names ending
            with '.resources' (resulting in *.resources.dll) will
            lead to errors when this flag set to false. Default false.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.IncludeAssemblies">
            <summary>
            A list of assembly names to embed. Do not include .exe or .dll
            in the names. Can use wildcards at the end of the name for
            partial matching. If you don't set this, all Copy Local references
            are embedded.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.ExcludeAssemblies">
            <summary>
            A list of assembly names to exclude from embedding.
            Can use wildcards for partial assembly name matching.
            For example System.* will exclude all assemblies that start with System..
            Wildcards may only be used at the end of an entry so
            for example, System.*.Private.* would not work.
            Do not include .exe or .dll in the names.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.Unmanaged32Assemblies">
            <summary>
            Mixed-mode assemblies cannot be loaded the same way
            as managed assemblies. Use this property for those assemblies instead.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.Unmanaged64Assemblies">
            <summary>
            Mixed-mode assemblies cannot be loaded the same way
            as managed assemblies. Use this property for those assemblies instead.
            </summary>
        </member>
        <member name="P:PostSharp.Community.Packer.PackerAttribute.PreloadOrder">
            <summary>
            Native libraries can be loaded by this add-in automatically.
            To include a native library include it in your project as an
            Embedded Resource in a folder called costura32 or costura64
            depending on the bittyness of the library.
            Optionally you can also specify the order that preloaded
            libraries are loaded. When using temporary assemblies
            from disk mixed mode assemblies are also preloaded.
            </summary>
        </member>
        <member name="T:PostSharp.Community.Packer.PackerUtility">
            <summary>
            Contains the method used to initialize the Packer.
            </summary>
        </member>
        <member name="M:PostSharp.Community.Packer.PackerUtility.Initialize">
            <summary>
            Call this to initialize the Packer. Use this if you're not using a module initialize. If you use this,
            you must call this before using any class that references something from a packed-in assembly.
            </summary>
        </member>
    </members>
</doc>
